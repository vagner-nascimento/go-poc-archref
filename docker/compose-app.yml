version: '3.7'

services:
  go-app:
    container_name: go-app
    build:
      context: ..
      dockerfile: AppDockerfile
    depends_on:
      - go-rabbit-mq
      - go-mongodb
    environment:
      - GO_ENV=docker
    restart: on-failure
    ports:
      - 3000:3000
    networks:
      - go-network
    command: >
      bash -c "/scripts/wait-for-it.sh -t 8 go-rabbit-mq:5672 &&
      /scripts/wait-for-it.sh -t 5 go-mongodb:27017 -- /app/main"

  go-rabbit-mq:
    container_name: go-rabbit-mq
    image: rabbitmq:3.6-management-alpine
    ports:
      - 5672:5672 # The standard AMQP protocol port
      - 15672:15672 # HTTP management UI
    volumes:
      - rabitmq:/etc/rabbitmq/
    networks:
      - go-network

  go-mongodb:
    image: mongo
    container_name: go-mongodb
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - mongodb:/data/db
      - mongoconfig:/data/configdb
    networks:
      - go-network

volumes: # default dir on Ubuntu: /var/lib/docker/volumes
  mongodb:
  mongoconfig:
  rabitmq:

networks:
  go-network:
    driver: bridge